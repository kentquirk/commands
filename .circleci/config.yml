version: 2
jobs:
  build:
    working_directory: /commands
    docker:
      - image: 578681496768.dkr.ecr.us-east-1.amazonaws.com/circle-ci:0.0.7
    environment:
      shell: /bin/bash
      # Used for ECR
      AWS_DEFAULT_REGION: us-east-1
      # ECR's
      ECR_ENDPOINT: 578681496768.dkr.ecr.us-east-1.amazonaws.com
      # Bump these versions, and commit to master to upload a new version to ECR
      NOMS_CONTAINER_VERSION: 0.0.1
      STARTING_PORT: "30050" # TODO change for chaos and ndau
      ELB_SUBDOMAIN: api.ndau.tech # nodes will be accessible from mario.api.ndau.tech
      # These node names are removed first before new ones are installed.
      # If these names change, the old names will have to be removed manually.
      NODE_NAMES: "devnet-0 devnet-1 devnet-2 devnet-3 devnet-4" # TODO change for chaos and ndau
      RELEASE_NAME: "devnet"
      # Number of nodes to deploy
      NODE_NUM: "5"
      KUBECONFIG: /root/kubeconfig
    steps:
      - add_ssh_keys:
          fingerprints:
            - "97:67:2b:f6:0c:ea:af:56:dd:04:1d:c1:28:54:ba:37"
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Turn environment variable secrets into files
          command: |
            # install helm certs
            mkdir -p /root/.helm
            echo -e "$helm_ca_pem" > /root/.helm/ca.pem
            echo -e "$helm_cert_pem" > /root/.helm/cert.pem
            echo -e "$helm_key_pem" > /root/.helm/key.pem

            # install kube config certs
            echo -e "$kube_config" > /root/kubeconfig

            cd /commands
            echo "export VERSION=$(git describe --long --tags)" >> $BASH_ENV
            echo "export SHA=$(git rev-parse --short $CIRCLE_SHA1)" >> $BASH_ENV

            # AWS ECR Login
            eval $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})

      - run:
          name: Checkout code
          command: |
            # depth=1 makes the clone a lot faster
            git clone $CIRCLE_REPOSITORY_URL -b $CIRCLE_BRANCH /commands --depth=1

            # install github machine user key
            # This needs to be here. Otherwise git will cowardly refuse to clone into an non-empty directory.
            echo -e "$machine_user_key" > /commands/machine_user_key

      - run:
          name: build the deps image
          command: docker build -t deps -f /commands/deploy/deps.docker /commands/
      - run:
          name: Run /vendor tests
          command: docker run --rm -e CI=true deps /bin/bash -c "go test /go/src/github.com/oneiro-ndev/commands/vendor/..."
      - run:
          name: Run /cmd tests
          command: docker run --rm -e CI=true deps /bin/bash -c "go test /go/src/github.com/oneiro-ndev/commands/cmd/..."
      # TODO add step for integration style unit tests as well
      - run:
          name: run all sub project docker scripts
          command: find . -name "docker-build-push.sh" -exec {} \;
      - run:
          name: run the deploy script
          command: /commands/deploy/deploy.sh

