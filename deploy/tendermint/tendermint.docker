#!/bin/bash

# We don't _want_ to maintain a dockerfile for tendermint,
# but we're currently forced to in order to get versions newer
# than 0.17.1. See https://github.com/tendermint/tendermint/issues/1388
# As soon as that issue is resolved, we should just use their image
# from docker-hub and remove this file.

# This file is substantially derived from their 0.16 file, located at
# https://github.com/tendermint/tendermint/blob/v0.16.0/DOCKER/Dockerfile

FROM golang:1.11-alpine3.8 AS build

# The image will be built and tagged with this version
LABEL org.opencontainers.image.version v0.31.0

# This is the release of tendermint to git pull.
ARG TM_REPO_TAG=v0.31.0

RUN apk add --no-cache git openssh-client bash

# Use dep instead of glide, glide no longer supported in TM v0.18.0
RUN go get -u github.com/golang/dep/... && \
    mkdir -p /go/src/github.com/tendermint && \
    git clone https://github.com/tendermint/tendermint.git \
    /go/src/github.com/tendermint/tendermint && \
    cd /go/src/github.com/tendermint/tendermint && \
    git checkout ${TM_REPO_TAG}

# Get patch files and apply them
COPY ./deploy/tendermint/Gopkg.toml.patch /go/src/github.com/oneiro-ndev/commands/deploy/tendermint/Gopkg.toml.patch
COPY ./deploy/tendermint/root.go.patch /go/src/github.com/oneiro-ndev/commands/deploy/tendermint/root.go.patch
RUN patch -i /go/src/github.com/oneiro-ndev/commands/deploy/tendermint/Gopkg.toml.patch /go/src/github.com/tendermint/tendermint/Gopkg.toml && \
    patch -i /go/src/github.com/oneiro-ndev/commands/deploy/tendermint/root.go.patch /go/src/github.com/tendermint/tendermint/cmd/tendermint/commands/root.go

# now we can build
WORKDIR /go/src/github.com/tendermint/tendermint

RUN dep ensure && \
    CGO_ENABLED=0 GOOS=linux go install -v -a -ldflags '-extldflags "-static"' ./cmd/tendermint && \
    cp /go/bin/tendermint /bin/tendermint

FROM alpine:3.8
# Tendermint will be looking for genesis file in /tendermint (unless you change
# `genesis_file` in config.toml). You can put your config.toml and private
# validator file into /tendermint.
#
# The /tendermint/data dir is used by tendermint to store state.
ENV DATA_ROOT /tendermint
ENV TMHOME $DATA_ROOT

# Set user right away for determinism
RUN addgroup tmuser && \
    adduser -S -G tmuser tmuser

# Create directory for persistence and give our user ownership
RUN mkdir -p $DATA_ROOT && \
    chown -R tmuser:tmuser $DATA_ROOT

# jq and curl used for extracting `pub_key` from private validator while
# deploying tendermint with Kubernetes.
# curl bash and openssl are used for snapshots
# perl for text processing
RUN apk add --no-cache bash curl jq openssl perl

COPY --from=build /bin/tendermint /bin/tendermint

# Expose the data directory as a volume since there's mutable state in there
VOLUME $DATA_ROOT

# p2p port
EXPOSE 26656
# rpc port
EXPOSE 26657

ENTRYPOINT ["tendermint"]

CMD ["node", "--moniker=`hostname`"]
