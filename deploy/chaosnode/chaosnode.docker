# Build stage: this all gets discarded later
FROM golang:1.11-alpine3.8 AS build

# start by installing fundamental utilities
# openssh-client is required for git
# git is required for glide
# bash is required for check-github-fingerprint.sh (array syntax)
RUN apk add --no-cache git openssh-client bash

# set up working directory
ENV DEP_DIR=/go/src/github.com/oneiro-ndev/commands
ENV DIR=/go/src/github.com/oneiro-ndev/chaos
WORKDIR ${DIR}

# Copy the source into the container and build
COPY --from=deps ${DEP_DIR}/cmd ${DIR}/cmd
COPY --from=deps ${DEP_DIR}/vendor ${DIR}/vendor

# build it
RUN CGO_ENABLED=0 GOOS=linux go install -a -ldflags '-extldflags "-static"' ./cmd/chaosnode

# Copy binary to known location. The run containers won't know GOPATH.
RUN cp /go/bin/chaosnode /bin/

# Terminal build stage: should only contain the static executable
FROM alpine:3.8
# Add the ca certs so that we can do outbound connections to https sites (honeycomb)
RUN apk add --no-cache  ca-certificates

# add these tools for kubernetes deployments
RUN apk add --no-cache bash openssl curl perl

# only copy the binary artifacts we produced earlier
COPY --from=build /bin/chaosnode /bin/

# chaosnode listens here for its requests
# tendermint connects to this port
EXPOSE 26658/TCP

ENTRYPOINT ["/bin/chaosnode"]
